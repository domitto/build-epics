name: build-epics

on: [push, pull_request]

jobs:
  build-ubuntu:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: "ubuntu-latest"
            name: "ubuntu2004"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: "apt-get install"
        run: |
          sudo apt-get update
          sudo apt-get -y install libreadline6-dev libncurses5-dev perl re2c \
            python3-dev python3-nose2 python3-numpy libgraphicsmagick++-dev \
            libhdf5-dev libjpeg-dev libnetcdf-dev libtiff-dev libz-dev \
            xz-utils
      - name: Build
        run: ./build-epics.sh -j2 -p${{ matrix.name }} </dev/null
      - name: Test
        run: ./build-testapp.sh
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: tar-${{ matrix.name }}
          path: epics-*.tar.*
          retention-days: 1

  build-centos:
    name: ${{ matrix.image }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - image: "centos:7"
            name: "centos7"

          - image: "rockylinux:8"
            name: "RHELish8"

          - image: "debian:11"
            name: "debian11"

          - image: "debian:12"
            name: "debian12"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Docker setup
        run: docker pull ${{ matrix.image }}
      - name: Build & Test
        run: docker run --rm -v `pwd`:/io -w /io ${{ matrix.image }} ./docker-build.sh -j2 -p${{ matrix.name }}
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: tar-${{ matrix.name }}
          path: epics-*.tar.*
          retention-days: 1
